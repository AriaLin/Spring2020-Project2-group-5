shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinydashboard")
install.packages("shinydashboard")
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
install.packages(c("geosphere", "googleVis", "leaflet.extras", "shinyWidgets"))
install.packages(c("shinythemes", "shinyWidgets"))
shiny::runApp('E:/Spring2020-Project2-group-5-map/app')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('E:/Spring2020-Project2-group-5-map/app')
runApp('E:/Spring2020-Project2-group-5-map/app')
runApp('E:/Spring2020-Project2-group-5-map/app')
runApp('E:/Spring2020-Project2-group-5-map/app')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('E:/Spring2020-Project2-group-5-map/app')
runApp()
runApp()
runApp()
runApp('E:/Spring2020-Project2-group-5-map/app')
library(dplyr)
source('C:/Users/Zhang/Desktop/ads/new/radar.r', echo=TRUE)
library(dplyr)
library(plotly)
radar <- read.csv("./radar/radar.csv")
bronx <- plot_ly(
type = 'scatterpolar',
r = as.numeric(radar %>% dplyr::filter(Borough == "Bronx") %>% select(-"Borough")),
theta = c('Home_base','Job_center','After_school', 'Condom', 'Primary_care', 'Food_stamp'),
fill = 'toself'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,5)
)
),
showlegend = F
)
bronx
brooklyn <- plot_ly(
type = 'scatterpolar',
r = as.numeric(radar %>% dplyr::filter(Borough == "Brooklyn") %>% select(-"Borough")),
theta = c('Home_base','Job_center','After_school', 'Condom', 'Primary_care', 'Food_stamp'),
fill = 'toself'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,5)
)
),
showlegend = F
)
brooklyn
manha <- plot_ly(
type = 'scatterpolar',
r = as.numeric(radar %>% dplyr::filter(Borough == "Manhattan") %>% select(-"Borough")),
theta = c('Home_base','Job_center','After_school', 'Condom', 'Primary_care', 'Food_stamp'),
fill = 'toself'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,5)
)
),
showlegend = F
)
manha
queens <- plot_ly(
type = 'scatterpolar',
r = as.numeric(radar %>% dplyr::filter(Borough == "Queens") %>% select(-"Borough")),
theta = c('Home_base','Job_center','After_school', 'Condom', 'Primary_care', 'Food_stamp'),
fill = 'toself'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,5)
)
),
showlegend = F
)
queens
stateis <- plot_ly(
type = 'scatterpolar',
r = as.numeric(radar %>% dplyr::filter(Borough == "StatenIsland") %>% select(-"Borough")),
theta = c('Home_base','Job_center','After_school', 'Condom', 'Primary_care', 'Food_stamp'),
fill = 'toself'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,5)
)
),
showlegend = F
)
stateis
runApp()
install.packages("bsplus")
shiny::runApp()
runApp()
install.packages("ggthemes")
runApp('C:/Users/Zhang/Desktop/app')
install.packages("quantmod")
runApp('C:/Users/Zhang/Desktop/app')
runApp('C:/Users/Zhang/Desktop/app')
runApp('C:/Users/Zhang/Desktop/app')
runApp('C:/Users/Zhang/Desktop/app')
runApp('C:/Users/Zhang/Desktop/app')
runApp('C:/Users/Zhang/Desktop/app')
runApp('C:/Users/Zhang/Desktop/app')
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
knitr::opts_chunk$set(echo = TRUE)
# load homeless data
Homebase_Centers<-read.csv('../data/homeless/Directory_Of_Homebase_Locations.csv')
after_school_programs<-read.csv('../data/homeless/DYCD_after-school_programs__Runaway_And_Homeless_Youth.csv')
Health_Insurance<-read.csv('../data/homeless/Primary_Care_Access_and_Planning_-_Health_Insurance_Enrollment.csv')
Job_Centers<-read.csv('../data/homeless/Directory_Of_Job_Centers.csv')
condom_distribution<-read.csv('../data/homeless/NYC_Condom_Availability_Program_-_HIV_condom_distribution_locations.csv')
Food_Stamp_Centers<-read.csv('../data/homeless/Directory_of_Food_Stamp_Centers.csv')
Population<-read.csv("../data/homeless/New_York_City_Population_By_Community_Districts.csv")
homeless_population<-read.csv("../data/homeless/Census_by_Community.csv")
save(Homebase_Centers,Food_Stamp_Centers,after_school_programs,Health_Insurance,Job_Centers,condom_distribution,Population,homeless_population, file="../app/homeless.RData")
runApp()
runApp()
runApp('~/Documents/Kaiqi/Spring2020-Project2-group-5/app')
runApp('~/Documents/Kaiqi/Spring2020/app')
runApp('~/Documents/Kaiqi/Spring2020/app')
runApp()
runApp()
runApp('~/Documents/GitHub/fall2019-proj2--sec1-grp7/app')
as.vector(Animation_matrix[input$animation+1,])
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp3/app')
runApp()
runApp()
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp3/app')
runApp()
knitr::opts_chunk$set(echo = TRUE)
# load homeless data
Homebase_Centers<-read.csv('../data/homeless/Directory_Of_Homebase_Locations.csv')
after_school_programs<-read.csv('../data/homeless/DYCD_after-school_programs__Runaway_And_Homeless_Youth.csv')
Health_Insurance<-read.csv('../data/homeless/Primary_Care_Access_and_Planning_-_Health_Insurance_Enrollment.csv')
Job_Centers<-read.csv('../data/homeless/Directory_Of_Job_Centers.csv')
condom_distribution<-read.csv('../data/homeless/NYC_Condom_Availability_Program_-_HIV_condom_distribution_locations.csv')
Food_Stamp_Centers<-read.csv('../data/homeless/Directory_of_Food_Stamp_Centers.csv')
Population<-read.csv("../data/homeless/New_York_City_Population_By_Community_Districts.csv")
homeless_population<-read.csv("../data/homeless/Census_by_Community.csv")
save(Homebase_Centers,Food_Stamp_Centers,after_school_programs,Health_Insurance,Job_Centers,condom_distribution,Population,homeless_population, file="../app/homeless.RData")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
